model Room {
  id                String             @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  houseId           String             @map("house_id") @db.Uuid
  roomName          String             @map("room_name")
  width             Float              @map("width")
  length            Float              @map("length")
  height            Float              @map("height")
  squareFootage     Float              @map("square_footage")
  reservationPrice  Float              @map("reservation_price")
  numberOfBedrooms  Int                @map("number_of_bedrooms")
  numberOfBathrooms Int                @map("number_of_bathrooms")
  rentPrice         Float              @map("rent_price")
  numberOfPeople    Int                @map("number_of_people")
  hasMezzanine      Boolean            @map("has_mezzanine")
  index             Int                @unique @default(autoincrement()) @map("index")
  status            RoomStatus         @default(UNAVAILABLE) @map("status")
  createdAt         DateTime           @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt         DateTime?          @updatedAt @map("updated_at") @db.Timestamptz(6)
  deletedAt         DateTime?          @map("deleted_at") @db.Timestamptz(6)
  description       String?
  attachments       Attachment[]
  rentalRequests    RentalRequest[]
  roomHistories     RoomHistory[]
  roomVisitRequests RoomVisitRequest[]
  house             House              @relation(fields: [houseId], references: [id])

  @@map("rooms")
}

enum RoomStatus {
  AVAILABLE // Room is available for booking
  UNDER_MAINTENANCE // Room is temporarily unavailable due to maintenance
  OUT_OF_SERVICE // Room is permanently or indefinitely unavailable
  RESERVED // Room has been booked but not yet occupied
  UNAVAILABLE // Room is not in use but not permanently unavailable
  OCCUPIED // Room is currently occupied

  @@map("room_statuses")
}

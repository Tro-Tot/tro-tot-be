model Room {
  id                String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  houseId           String  @unique @map("house_id") @db.Uuid
  attachmentId      String? @map("attachment_id") @db.Uuid
  roomName          String  @map("room_name")
  width             Float   @map("width")
  length            Float   @map("length")
  height            Float   @map("height")
  squareFootage     Float   @map("square_footage")
  reservationPrice  Float   @map("reservation_price")
  numberOfBedrooms  Int     @map("number_of_bedrooms")
  numberOfBathrooms Int     @map("number_of_bathrooms")
  rentPrice         Float   @map("rent_price")
  numberOfPeople    Int     @map("number_of_people")
  hasMezzanine      Boolean @map("has_mezzanine")
  isOccupied        Boolean @default(false) @map("is_occupied")
  index             Int     @default(autoincrement()) @map("index")
  status            String  @default("available") @map("status")

  createdAt DateTime  @default(now()) @map("created_at") @db.Timestamptz()
  updatedAt DateTime? @updatedAt @map("updated_at") @db.Timestamptz()
  deletedAt DateTime? @map("deleted_at") @db.Timestamptz()

  rentalRequests    RentalRequest[]
  house             House              @relation(fields: [houseId], references: [id])
  roomHistories     RoomHistory[]
  roomVisitRequests RoomVisitRequest[]

  @@map("rooms")
}

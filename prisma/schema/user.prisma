model User {
  id             String           @id @default(uuid()) @map("id")
  email          String           @unique @map("email")
  password       String           @map("password")
  username       String           @map("username")
  avatarUrl      String?          @map("avatar_url")
  cidId          String?          @map("cid_id")
  createdAt      DateTime?        @default(now()) @map("created_at")
  dateOfBirth    DateTime         @map("date_of_birth")
  firstName      String           @map("first_name")
  gender         Gender           @map("gender")
  isDeleted      Boolean?         @default(false) @map("is_deleted")
  isVerified     Boolean?         @default(false) @map("is_verified")
  lastName       String           @map("last_name")
  phoneNumber    String           @unique @map("phone_number")
  roleId         String           @map("role_id")
  status         String?          @default("active") @map("status")
  updatedAt      DateTime?        @updatedAt @map("updated_at")
  LandLord       LandLord[]
  Manager        Manager[]
  Renter         Renter[]
  Staff          Staff[]
  TechnicalStaff TechnicalStaff[]
  Cid            Cid?             @relation(fields: [cidId], references: [id], onDelete: Restrict)
  role           Role             @relation(fields: [roleId], references: [id])
}

enum Gender {
  MALE   @map("MALE")
  FEMALE @map("FEMALE")
  OTHER  @map("OTHER")
}
